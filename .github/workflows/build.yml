name: Build ESP8266 Firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache Arduino CLI
      uses: actions/cache@v4
      with:
        path: |
          ~/.arduino15
          ~/Arduino/libraries
        key: ${{ runner.os }}-arduino-${{ hashFiles('**/*.ino') }}
        restore-keys: |
          ${{ runner.os }}-arduino-

    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v1.1.1

    - name: Install ESP8266 platform
      run: |
        arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json
        arduino-cli core install esp8266:esp8266 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json

    - name: List repository contents
      run: |
        echo "Repository root contents:"
        ls -la
        echo "All .ino files in repository:"
        find . -name "*.ino"
        echo "Current working directory:"
        pwd

    - name: Compile sketch for ESP8266
      run: |
        SKETCH_FILE=$(find "$(pwd)" -name "*.ino" | head -n 1)
        if [ -z "$SKETCH_FILE" ]; then
          echo "Error: No .ino file found in the repository"
          exit 1
        fi
        SKETCH_DIR=$(dirname "$SKETCH_FILE")
        echo "Full path of sketch file: $SKETCH_FILE"
        echo "Sketch directory: $SKETCH_DIR"
        echo "Contents of sketch file: (skipped)"
        # cat "$SKETCH_FILE"
        echo "Compiling sketch: $SKETCH_FILE"
        arduino-cli compile --fqbn esp8266:esp8266:d1_mini --build-property "build.extra_flags=-DESP8266" $SKETCH_FILE --output-dir ./

    - name: Rename output file for ESP8266
      run: |
        if [ -f *.ino.bin ]; then
          mv *.ino.bin firmware_esp8266.bin
        else
          echo "Error: Compiled binary not found"
          ls -la
          exit 1
        fi

    - name: Copy Compiled Firmware to firmware Folder
      run: |
        if [ -f firmware_esp8266.bin ]; then
          mkdir -p firmware
          cp firmware_esp8266.bin firmware/firmware_esp8266.bin
        fi

    - name: Upload firmware as artifact
      uses: actions/upload-artifact@v4
      with:
        name: firmware_esp8266
        path: firmware_esp8266.bin


    - name: Install ESP32 platform
      run: |
        arduino-cli core update-index --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
        arduino-cli core install esp32:esp32 --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json

    - name: Compile sketch for ESP32
      run: |
        SKETCH_FILE=$(find "$(pwd)" -name "*.ino" | head -n 1)
        if [ -z "$SKETCH_FILE" ]; then
          echo "Error: No .ino file found in the repository"
          exit 1
        fi
        SKETCH_DIR=$(dirname "$SKETCH_FILE")
        echo "Full path of sketch file: $SKETCH_FILE"
        echo "Sketch directory: $SKETCH_DIR"
        echo "Contents of sketch file: (skipped)"
        # cat "$SKETCH_FILE"
        echo "Compiling sketch: $SKETCH_FILE"
        arduino-cli compile --fqbn esp32:esp32:esp32 --build-property "build.extra_flags=-DESP32" $SKETCH_FILE --output-dir ./

    - name: Rename output file for ESP32
      run: |
        if [ -f *.ino.bin ]; then
          mv *.ino.bin firmware_esp32.bin
        else
          echo "Error: Compiled binary not found"
          ls -la
          exit 1
        fi

    - name: Copy Compiled Firmware to firmware Folder
      run: |
        if [ -f firmware_esp32.bin ]; then
          mkdir -p firmware
          cp firmware_esp32.bin firmware/firmware_esp32.bin
        fi

    - name: Upload firmware as artifact
      uses: actions/upload-artifact@v4
      with:
        name: firmware_esp32
        path: firmware_esp32.bin

    - name: Display Arduino CLI version
      run: arduino-cli version

    - name: Display installed boards
      run: arduino-cli board listall

    - name: Display installed libraries
      run: arduino-cli lib list
